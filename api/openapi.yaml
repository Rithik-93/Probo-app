openapi: 3.0.0
info:
  title: Stock Trading API
  description: API for managing users, stocks, and orders in a stock trading system
  version: 1.0.0
servers:
  - url: https://probo-app.onrender.com/api/v1
paths:
  /user/create/{userId}:  # Path parameter for userId
    post:
      summary: Create a new user
      parameters:
        - name: userId
          in: path  # Path parameter
          required: true
          schema:
            type: string
      responses:
        201:
          description: User created
        404:
          description: User already exists or invalid user ID

  /symbol/create/{stockSymbol}:  # Path parameter for stockSymbol
    post:
      summary: Create a new stock symbol
      parameters:
        - name: stockSymbol
          in: path  # Path parameter
          required: true
          schema:
            type: string
      responses:
        201:
          description: Symbol created
        404:
          description: Symbol already exists or invalid symbol

  /onramp/inr:
    post:
      summary: Add funds to user's INR balance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                amount:
                  type: integer
      responses:
        200:
          description: Funds added
        400:
          description: User does not exist

  /trade/mint:
    post:
      summary: Mint tokens for a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                stockSymbol:
                  type: string
                quantity:
                  type: integer
                price:
                  type: number
      responses:
        200:
          description: Tokens minted
        400:
          description: Invalid input or insufficient balance

  /reset:
    post:
      summary: Reset all balances and order book
      responses:
        200:
          description: Reset successfully

  /balances/inr:
    get:
      summary: Get all INR balances
      responses:
        200:
          description: Returns all INR balances

  /balances/inr/{userId}:  # Path parameter for userId
    get:
      summary: Get INR balance for a user
      parameters:
        - name: userId
          in: path  # Path parameter
          required: true
          schema:
            type: string
      responses:
        200:
          description: Returns user's INR balance
        400:
          description: User does not exist

  /balances/stock:
    get:
      summary: Get all stock balances
      responses:
        200:
          description: Returns all stock balances

  /balances/stock/{userId}:  # Path parameter for userId
    get:
      summary: Get stock balance for a user
      parameters:
        - name: userId
          in: path  # Path parameter
          required: true
          schema:
            type: string
      responses:
        200:
          description: Returns user's stock balance
        400:
          description: User does not exist

  /orderbook:
    get:
      summary: Get the full order book
      responses:
        200:
          description: Returns the full order book

  /orderbook/{stockSymbol}:  # Path parameter for stockSymbol
    get:
      summary: View orders for a stock symbol
      parameters:
        - name: stockSymbol
          in: path  # Path parameter
          required: true
          schema:
            type: string
      responses:
        200:
          description: Returns orders for the given stock symbol
        400:
          description: Stock does not exist

  /order/buy:
    post:
      summary: Place a buy order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                stockSymbol:
                  type: string
                quantity:
                  type: integer
                price:
                  type: number
                stockType:
                  type: string
                  enum: [yes, no]
      responses:
        200:
          description: Buy order placed and executed
        400:
          description: Invalid input or insufficient balance

  /order/sell:
    post:
      summary: Place a sell order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                stockSymbol:
                  type: string
                quantity:
                  type: integer
                price:
                  type: number
                stockType:
                  type: string
                  enum: [yes, no]
      responses:
        200:
          description: Sell order placed
        400:
          description: Invalid input or insufficient stock balance

  /order/cancel:
    post:
      summary: Cancel an order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                stockSymbol:
                  type: string
                price:
                  type: number
                stockType:
                  type: string
                  enum: [yes, no]
      responses:
        200:
          description: Order canceled
        400:
          description: User or stock does not exist
